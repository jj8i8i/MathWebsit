// ===== SCRIPT.JS (FINAL V3 - ALGEBRA SET 1 + HINTS + BETTER SOLUTIONS/FORMATTING) =====
document.addEventListener('DOMContentLoaded', () => {
    console.log("DOM Loaded. Initializing script...");

    // --- DOM Elements ---
    const getElem = (id) => document.getElementById(id);

    const screens = {
        login: getElem('login-screen'),
        selection: getElem('selection-screen'),
        test: getElem('test-screen'),
        solution: getElem('solution-screen'),
    };
    const loginStuff = {
        usernameInput: getElem('username'),
        passwordInput: getElem('password'),
        loginBtn: getElem('login-btn'),
        errorMsg: getElem('login-error'),
    };
    const loginCard = document.querySelector('#login-screen .card');
    const examListContainer = getElem('exam-list-container');
    const timerDisplay = getElem('timer');
    const problemContainer = getElem('problem-container');
    const solutionList = getElem('solution-list');
    const scoreDisplay = getElem('score-display');
    const submitBtn = getElem('submit-btn');
    const backToSelectionBtn = getElem('back-to-selection-btn');
    const langToggles = document.querySelectorAll('.lang-toggle');
    const welcomeMessages = document.querySelectorAll('.welcome-message');
    const logoutBtns = document.querySelectorAll('.logout-btn');

    // --- State ---
    let timerInterval;
    let currentLang = 'en';
    let lastScore = null;
    let currentSetId = null;
    let currentUser = null;
    const DURATION = 1 * 60 * 60 + 30 * 60; // 1.5 hours

    const credentials = {
        JJ: 'admin', Waigoon: 'Joi', Thimphu: 'Yensira',
        Meepooh: 'Meepooh', Win: 'Eovs',
    };

    // --- Data ---
    const examSets = {
        'alg1': {
            en: { name: "Algebra Set 1 (1.5 Hours)", difficulty: "Easy" },
            th: { name: "พีชคณิต ชุดที่ 1 (1.5 ชั่วโมง)", difficulty: "ง่าย" }
        }
    };
    // ** PROBLEMS DATA **
    const allProblems = {
         'alg1': {
            en: [
                { title: "Problem 1", statement: "Let $P(x) = x^3 - 6x^2 + 11x - 6$. If $\\alpha, \\beta, \\gamma$ are the roots of $P(x)$, find the value of $(\\alpha+1)(\\beta+1)(\\gamma+1)$." },
                { title: "Problem 2", statement: "Find all functions $f: \\mathbb{R} \\to \\mathbb{R}$ such that $f(x+y) + f(x-y) = 2f(x) + 2f(y)$ for all $x, y \\in \\mathbb{R}$ and $f(1)=2$. Find the value of $f(3)$." },
                { title: "Problem 3", statement: "For positive real numbers $a, b, c$ such that $a+b+c=3$, find the minimum value of $\\frac{a^2}{b+c} + \\frac{b^2}{c+a} + \\frac{c^2}{a+b}$." },
                { title: "Problem 4", statement: "Let the sequence $a_1 = 1$ and $a_{n+1} = \\frac{a_n}{1+na_n}$ for $n \\ge 1$. Find the value of $a_{100}$ (answer as a fraction)." },
                { title: "Problem 5", statement: "Let $P(x)$ be a polynomial such that $P(x^2+1) = x^4+5x^2+3$. Find the value of $P(5)$." },
                { title: "Problem 6", statement: "Find the number of ordered pairs of positive integers $(x,y)$ such that $\\frac{1}{x} + \\frac{1}{y} = \\frac{1}{12}$." },
                { title: "Problem 7", statement: "Let $\\omega = e^{2\\pi i / 5}$ be a primitive 5th root of unity. Find the value of $(1-\\omega)(1-\\omega^2)(1-\\omega^3)(1-\\omega^4)$." },
                { title: "Problem 8", statement: "Let $f: \\mathbb{R} \\to \\mathbb{R}$ be a differentiable function satisfying $f(x+y) = f(x)f(y)$ for all $x,y \\in \\mathbb{R}$ and $f'(0)=3$. Find the value of $f(2)$ (answer in terms of $e$)." },
                { title: "Problem 9", statement: "Find the maximum value of $x^2y$ where $x,y$ are positive real numbers satisfying $2x+3y=6$." },
                { title: "Problem 10", statement: "Let $P(x)$ be a polynomial with integer coefficients. If $P(1)=5$ and $P(4)=8$, and $a$ is an integer such that $P(a)=6$, find the value of $a$." }
            ],
            th: [
                { title: "โจทย์ข้อที่ 1", statement: "ให้ $P(x) = x^3 - 6x^2 + 11x - 6$ ถ้า $\\alpha, \\beta, \\gamma$ เป็นรากของ $P(x)$ จงหาค่าของ $(\\alpha+1)(\\beta+1)(\\gamma+1)$" },
                { title: "โจทย์ข้อที่ 2", statement: "จงหาฟังก์ชัน $f: \\mathbb{R} \\to \\mathbb{R}$ ทั้งหมดที่สอดคล้องเงื่อนไข $f(x+y) + f(x-y) = 2f(x) + 2f(y)$ สำหรับทุก $x, y \\in \\mathbb{R}$ และ $f(1)=2$ จงหาค่าของ $f(3)$" },
                { title: "โจทย์ข้อที่ 3", statement: "สำหรับจำนวนจริงบวก $a, b, c$ ซึ่ง $a+b+c=3$ จงหาค่าต่ำสุดของ $\\frac{a^2}{b+c} + \\frac{b^2}{c+a} + \\frac{c^2}{a+b}$" },
                { title: "โจทย์ข้อที่ 4", statement: "ให้ลำดับ $a_1 = 1$ และ $a_{n+1} = \\frac{a_n}{1+na_n}$ สำหรับ $n \\ge 1$ จงหาค่าของ $a_{100}$ (ตอบในรูปเศษส่วน)" },
                { title: "โจทย์ข้อที่ 5", statement: "ให้ $P(x)$ เป็นพหุนามซึ่ง $P(x^2+1) = x^4+5x^2+3$ จงหาค่าของ $P(5)$" },
                { title: "โจทย์ข้อที่ 6", statement: "จงหาจำนวนคู่อันดับของจำนวนเต็มบวก $(x,y)$ ทั้งหมดที่สอดคล้องสมการ $\\frac{1}{x} + \\frac{1}{y} = \\frac{1}{12}$" },
                { title: "โจทย์ข้อที่ 7", statement: "ให้ $\\omega = e^{2\\pi i / 5}$ เป็นรากปฐมฐานที่ 5 ของ 1 จงหาค่าของ $(1-\\omega)(1-\\omega^2)(1-\\omega^3)(1-\\omega^4)$" },
                { title: "โจทย์ข้อที่ 8", statement: "ให้ $f: \\mathbb{R} \\to \\mathbb{R}$ เป็นฟังก์ชันที่หาอนุพันธ์ได้ ซึ่งสอดคล้อง $f(x+y) = f(x)f(y)$ สำหรับทุก $x,y \\in \\mathbb{R}$ และ $f'(0)=3$ จงหาค่าของ $f(2)$ (ตอบในรูป $e$ ยกกำลัง)" },
                { title: "โจทย์ข้อที่ 9", statement: "จงหาค่าสูงสุดของ $x^2y$ เมื่อ $x,y$ เป็นจำนวนจริงบวกที่สอดคล้อง $2x+3y=6$" },
                { title: "โจทย์ข้อที่ 10", statement: "ให้ $P(x)$ เป็นพหุนามที่มีสัมประสิทธิ์เป็นจำนวนเต็ม ถ้า $P(1)=5$ และ $P(4)=8$ และ $a$ เป็นจำนวนเต็มซึ่ง $P(a)=6$ จงหาค่าของ $a$" }
            ]
        }
    };
    // ** MORE DETAILED SOLUTIONS DATA **
    const allSolutions = {
         'alg1': {
            en: [
                {
                    answer: "24",
                    hint: "Consider the factored form P(x) = (x-α)(x-β)(x-γ) and evaluate P(-1).",
                    steps: "Let the roots of the polynomial $P(x) = x^3 - 6x^2 + 11x - 6$ be $\\alpha, \\beta, \\gamma$.\nBy the Factor Theorem, we can write the polynomial as $P(x) = (x-\\alpha)(x-\\beta)(x-\\gamma)$.\n\nWe are asked to find the value of the expression $V = (\\alpha+1)(\\beta+1)(\\gamma+1)$.\n\nConsider evaluating the polynomial $P(x)$ at $x = -1$. Using the factored form:\n$P(-1) = (-1-\\alpha)(-1-\\beta)(-1-\\gamma)$.\n\nFactor out $-1$ from each term:\n$P(-1) = (-1)(1+\\alpha) \\cdot (-1)(1+\\beta) \\cdot (-1)(1+\\gamma)$\n$P(-1) = (-1)^3 (1+\\alpha)(1+\\beta)(1+\\gamma)$.\n\nRecognize that the product $(1+\\alpha)(1+\\beta)(1+\\gamma)$ is exactly the expression $V$ we want to find.\nSo, $P(-1) = -V$.\nThis implies $V = -P(-1)$.\n\nNow, calculate $P(-1)$ using the standard form of the polynomial:\n$P(-1) = (-1)^3 - 6(-1)^2 + 11(-1) - 6$\n$P(-1) = -1 - 6(1) - 11 - 6$\n$P(-1) = -1 - 6 - 11 - 6 = -24$.\n\nFinally, substitute the value of $P(-1)$ to find $V$:\n$V = -(-24) = 24$."
                },
                {
                    answer: "18",
                    hint: "This is a standard functional equation. What kind of function satisfies it?",
                    steps: "The given functional equation is $f(x+y) + f(x-y) = 2f(x) + 2f(y)$. This is known as d'Alembert's functional equation or the quadratic functional equation.\n\nFor functions defined on real numbers, assuming continuity (or even weaker conditions like boundedness on an interval), the general solution is known to be of the form $f(x) = cx^2$ for some constant $c$.\n(Verification: $c(x+y)^2 + c(x-y)^2 = c(x^2+2xy+y^2 + x^2-2xy+y^2) = c(2x^2+2y^2) = 2(cx^2) + 2(cy^2) = 2f(x)+2f(y)$).\n\nWe are given the condition $f(1)=2$. This allows us to determine the specific constant $c$.\nSubstitute $x=1$ into the general form $f(x)=cx^2$:\n$f(1) = c(1)^2 = c$.\nSince $f(1)=2$, we conclude that $c=2$.\n\nTherefore, the function satisfying the given conditions is $f(x) = 2x^2$.\n\nThe question asks for the value of $f(3)$.\nSubstitute $x=3$ into the function: $f(3) = 2(3^2) = 2(9) = 18$."
                },
                {
                    answer: "3/2",
                    hint: "Try applying the Engel form of Cauchy-Schwarz.",
                    steps: "We need to find the minimum value of $S = \\frac{a^2}{b+c} + \\frac{b^2}{c+a} + \\frac{c^2}{a+b}$ for positive real numbers $a, b, c$ with $a+b+c=3$.\n\nThis expression is suitable for the Engel form of the Cauchy-Schwarz inequality (also known as Titu's Lemma).\nFor positive $x_1, x_2, x_3$ and $y_1, y_2, y_3$:\n$\\frac{x_1^2}{y_1} + \\frac{x_2^2}{y_2} + \\frac{x_3^2}{y_3} \\ge \\frac{(x_1+x_2+x_3)^2}{y_1+y_2+y_3}$.\n\nLet $x_1=a, x_2=b, x_3=c$. Let $y_1=b+c, y_2=c+a, y_3=a+b$. Applying the inequality:\n$S \\ge \\frac{(a+b+c)^2}{(b+c)+(c+a)+(a+b)}$.\n\nThe denominator simplifies to $2a+2b+2c = 2(a+b+c)$.\nSo, $S \\ge \\frac{(a+b+c)^2}{2(a+b+c)}$.\n\nSince $a+b+c=3$ (which is non-zero), we can simplify:\n$S \\ge \\frac{a+b+c}{2}$.\n\nSubstitute the given sum $a+b+c=3$:\n$S \\ge \\frac{3}{2}$.\n\nThis establishes $3/2$ as a lower bound.\nEquality holds in the Engel form if $\\frac{x_1}{y_1} = \\frac{x_2}{y_2} = \\frac{x_3}{y_3}$.\nIn our case, $\\frac{a}{b+c} = \\frac{b}{c+a} = \\frac{c}{a+b}$. This condition is met when $a=b=c$.\n\nGiven $a+b+c=3$, the equality case occurs when $a=b=c=1$.\nLet's check the value of S when $a=b=c=1$:\n$S = \\frac{1^2}{1+1} + \\frac{1^2}{1+1} + \\frac{1^2}{1+1} = \\frac{1}{2} + \\frac{1}{2} + \\frac{1}{2} = \\frac{3}{2}$.\n\nSince the lower bound $3/2$ is achieved, it is the minimum value."
                },
                {
                    answer: "1/4951",
                    hint: "Consider the reciprocal sequence b_n = 1/a_n.",
                    steps: "The recurrence $a_{n+1} = \\frac{a_n}{1+na_n}$ suggests looking at the reciprocals.\nLet $b_n = 1/a_n$. Then $a_n = 1/b_n$.\nSubstitute this into the recurrence relation:\n$\\frac{1}{b_{n+1}} = \\frac{1/b_n}{1+n(1/b_n)} = \\frac{1/b_n}{1+n/b_n}$.\n\nTo simplify the fraction on the right, multiply the numerator and denominator by $b_n$:\n$\\frac{1}{b_{n+1}} = \\frac{(1/b_n) \cdot b_n}{(1+n/b_n) \cdot b_n} = \\frac{1}{b_n + n}$.\n\nTaking the reciprocal of both sides gives the recurrence for $b_n$:\n$b_{n+1} = b_n + n$.\n\nThis means the difference between consecutive terms is $b_{k+1} - b_k = k$.\nWe want to find $b_{100}$. We can write $b_{100}$ using a telescoping sum:\n$b_{100} = b_1 + \sum_{k=1}^{99} (b_{k+1}-b_k)$.\nSubstitute the difference we found:\n$b_{100} = b_1 + \sum_{k=1}^{99} k$.\n\nWe know $a_1=1$, so $b_1 = 1/a_1 = 1$.\nThe sum is the sum of the first 99 integers: $\\sum_{k=1}^{99} k = \\frac{99(99+1)}{2} = \\frac{99 \times 100}{2} = 99 \times 50 = 4950$.\n\nSubstitute these values back:\n$b_{100} = 1 + 4950 = 4951$.\n\nFinally, find $a_{100}$:\n$a_{100} = \\frac{1}{b_{100}} = \\frac{1}{4951}$."
                },
                {
                    answer: "39",
                    hint: "Let y = x^2+1 and express the right side in terms of y.",
                    steps: "We are given $P(x^2+1) = x^4+5x^2+3$. We want to find the form of the polynomial $P(y)$.\nPerform a substitution: let the input to $P$ be $y$, so $y = x^2+1$.\nWe need to rewrite the right side, $x^4+5x^2+3$, using only $y$.\nFrom $y = x^2+1$, we solve for $x^2$: $x^2 = y-1$.\nWe also need $x^4$, which is $(x^2)^2$: $x^4 = (y-1)^2$.\n\nSubstitute these into the right side of the original equation:\n$P(y) = (y-1)^2 + 5(y-1) + 3$.\n\nNow, expand and simplify the expression for $P(y)$:\n$P(y) = (y^2 - 2y + 1) + (5y - 5) + 3$\nCombine like terms by grouping powers of $y$:\n$P(y) = y^2 + (-2y + 5y) + (1 - 5 + 3)$\n$P(y) = y^2 + 3y - 1$.\n\nThis is the explicit form of the polynomial $P$. For any input $t$, $P(t)=t^2+3t-1$.\n\nWe need to find $P(5)$. Substitute $y=5$ (or $t=5$):\n$P(5) = (5)^2 + 3(5) - 1$\n$P(5) = 25 + 15 - 1$\n$P(5) = 40 - 1 = 39$."
                },
                {
                    answer: "15",
                    hint: "Clear denominators and try to factor using SFFT (Simon's Favorite Factoring Trick).",
                    steps: "The equation is $\\frac{1}{x} + \\frac{1}{y} = \\frac{1}{12}$ for positive integers $x, y$.\nMultiply by $12xy$ to clear the denominators:\n$12y + 12x = xy$.\n\nRearrange into the form $xy + Ax + By + C = D$ to facilitate factoring:\n$xy - 12x - 12y = 0$.\n\nTo factor this, we aim for the form $(x+A)(y+B)$. Notice that $(x-12)(y-12) = xy - 12x - 12y + 144$. Our current equation almost matches this, except for the constant term. Add 144 to both sides of $xy - 12x - 12y = 0$:\n$xy - 12x - 12y + 144 = 144$.\n\nNow the left side factors:\n$(x-12)(y-12) = 144$.\n\nLet $X = x-12$ and $Y = y-12$. We have $XY = 144$.\nSince $x$ and $y$ are positive integers, $x \ge 1$ and $y \ge 1$.\nThis implies $X = x-12 \ge 1-12 = -11$ and $Y = y-12 \ge 1-12 = -11$. Also, $X$ and $Y$ must be integers.\n\nSince $XY = 144$ (positive), $X$ and $Y$ must have the same sign.\nIf $X$ and $Y$ were both negative, let $X=-a, Y=-b$ where $a, b$ are positive divisors of 144. Then $x = 12-a$ and $y = 12-b$. For $x \ge 1$, we need $a \le 11$. For $y \ge 1$, we need $b \le 11$. We need a pair of factors $(a,b)$ of 144 such that $a \le 11$ and $b \le 11$. The pairs are $(1, 144), (2, 72), (3, 48), (4, 36), (6, 24), (8, 18), (9, 16), (12, 12)$. Only the pair $(a,b)=(12,12)$ has $a,b \ge 12$. All other pairs have at least one factor greater than 11. If $a=12, b=12$, then $X=-12, Y=-12$. This gives $x=0, y=0$, which are not positive integers.\nTherefore, $X$ and $Y$ must both be positive integer divisors of 144.\n\nEach positive integer factor $X$ of 144 determines a unique positive integer factor $Y = 144/X$. This pair $(X, Y)$ gives a unique pair $(x, y)$ where $x = X+12$ and $y = Y+12$. Since $X \ge 1$ and $Y \ge 1$, $x \ge 13$ and $y \ge 13$, satisfying the positive integer condition.\n\nThe number of solutions $(x, y)$ is equal to the number of positive divisors of 144.\n\nFind the prime factorization of 144: $144 = 12^2 = (2^2 \cdot 3)^2 = 2^4 \cdot 3^2$.\nThe number of positive divisors is calculated by adding 1 to each exponent and multiplying the results: $d(144) = (4+1)(2+1) = 5 \times 3 = 15$.\n\nThere are 15 such ordered pairs."
                },
                {
                    answer: "5",
                    hint: "Consider the polynomial P(x) = x^5 - 1 and its roots.",
                    steps: "Let $\\omega = e^{2\\pi i / 5}$. This is a primitive 5th root of unity, meaning $\\omega^5 = 1$ and $\\omega^k \ne 1$ for $1 \le k \le 4$.\nThe roots of the polynomial equation $x^5 - 1 = 0$ are the five 5th roots of unity: $1, \\omega, \\omega^2, \\omega^3, \\omega^4$.\n\nBy the Factor Theorem, we can factor $x^5 - 1$ as:\n$x^5 - 1 = (x-1)(x-\\omega)(x-\\omega^2)(x-\\omega^3)(x-\\omega^4)$.\n\nNow, consider the polynomial $Q(x) = \\frac{x^5-1}{x-1}$. This polynomial has the roots $\\omega, \\omega^2, \\omega^3, \\omega^4$. We can find its form by polynomial division or the geometric series sum formula:\n$Q(x) = x^4 + x^3 + x^2 + x + 1$.\n\nFrom the factorization of $x^5-1$, we can also write $Q(x)$ as:\n$Q(x) = (x-\\omega)(x-\\omega^2)(x-\\omega^3)(x-\\omega^4)$.\n\nThe expression we want to find is $V = (1-\\omega)(1-\\omega^2)(1-\\omega^3)(1-\\omega^4)$.\nNotice that this is exactly the value of the polynomial $Q(x)$ when evaluated at $x=1$.\n\n$V = Q(1)$.\n\nSubstitute $x=1$ into the standard form of $Q(x)$:\n$Q(1) = 1^4 + 1^3 + 1^2 + 1 + 1 = 1 + 1 + 1 + 1 + 1 = 5$.\n\nTherefore, the value of the product is 5."
                },
                {
                    answer: "e^6",
                    hint: "What is the general form of a differentiable function satisfying f(x+y)=f(x)f(y)?",
                    steps: "The functional equation $f(x+y) = f(x)f(y)$ is the exponential Cauchy functional equation.\nIf $f$ is assumed to be differentiable, then it must be of the form $f(x) = e^{cx}$ for some constant $c$. (We exclude the trivial solution $f(x)=0$ because its derivative at 0 is 0, not 3).\n\nTo find the constant $c$, we differentiate $f(x) = e^{cx}$ with respect to $x$:\n$f'(x) = \frac{d}{dx}(e^{cx}) = e^{cx} \cdot \frac{d}{dx}(cx) = c e^{cx}$.\n\nNow use the given condition $f'(0)=3$.\n$f'(0) = c e^{c \cdot 0} = c e^0 = c \times 1 = c$.\nEquating this to the given value, we get $c=3$.\n\nSo the function is uniquely determined as $f(x) = e^{3x}$.\n\nWe need to find the value of $f(2)$.\n$f(2) = e^{3 \times 2} = e^6$."
                },
                {
                    answer: "8/3",
                    hint: "Use AM-GM inequality. How can you split 2x+3y to get x^2y in the product?",
                    steps: "We want to maximize $P = x^2y$ given $x>0, y>0$ and the linear constraint $2x+3y=6$.\nThe AM-GM inequality states $\frac{a_1+\dots+a_k}{k} \ge \sqrt[k]{a_1 \dots a_k}$ for non-negative $a_i$.\n\nTo obtain $x^2y$ in the geometric mean, we need three terms, two involving $x$ and one involving $y$. Let's try the terms $x, x, 3y$. These are positive.\nTheir sum is $x+x+3y = 2x+3y$, which equals 6 according to the constraint.\n\nApply AM-GM to $x, x, 3y$:\n$\\frac{x+x+3y}{3} \ge \\sqrt[3]{x \cdot x \cdot (3y)}$\n$\\frac{2x+3y}{3} \ge \\sqrt[3]{3x^2y}$.\n\nSubstitute the constraint $2x+3y=6$:\n$\\frac{6}{3} \ge \\sqrt[3]{3x^2y}$\n$2 \ge \\sqrt[3]{3x^2y}$.\n\nCube both sides:\n$8 \ge 3x^2y$.\n\nDivide by 3:\n$x^2y \le \\frac{8}{3}$.\n\nThe maximum value is $8/3$, provided equality can occur.\nEquality in AM-GM holds when $x = x = 3y$, i.e., $x=3y$.\n\nCheck if this condition is compatible with the constraint:\nSubstitute $x=3y$ into $2x+3y=6$:\n$2(3y) + 3y = 6$\n$6y + 3y = 6$\n$9y = 6 \implies y = 2/3$.\nThen $x = 3y = 3(2/3) = 2$.\n\nSince $x=2$ and $y=2/3$ are positive real numbers, equality is achievable.\nTherefore, the maximum value of $x^2y$ is $8/3$."
                },
                {
                    answer: "2",
                    hint: "Use the property that (m-n) divides (P(m)-P(n)) for polynomials with integer coefficients.",
                    steps: "Let $P(x)$ be a polynomial with integer coefficients.\nA crucial property is that for any two distinct integers $m$ and $n$, the difference $m-n$ must divide the difference $P(m)-P(n)$. We write this as $m-n \mid P(m)-P(n)$.\n\nWe are given $P(1)=5$, $P(4)=8$, and $P(a)=6$ where $a$ is an integer.\n\nApply the property using $m=a$ and $n=1$. Since $P(a)=6 \ne P(1)=5$, we know $a \ne 1$.\n$a-1 \mid P(a)-P(1)$\n$a-1 \mid 6-5$\n$a-1 \mid 1$.\nThe only integers that divide 1 are 1 and -1.\nIf $a-1=1$, then $a=2$.\nIf $a-1=-1$, then $a=0$.\nSo, $a$ must be either 0 or 2.\n\nNow apply the property using $m=a$ and $n=4$. Since $P(a)=6 \ne P(4)=8$, we know $a \ne 4$.\n$a-4 \mid P(a)-P(4)$\n$a-4 \mid 6-8$\n$a-4 \mid -2$.\nThe integer divisors of -2 are $1, -1, 2, -2$. So $a-4$ must be one of these.\n\nWe check which of our possible values for $a$ (0 or 2) satisfies this condition.\nCase $a=0$: $a-4 = 0-4 = -4$. Is $-4$ a divisor of $-2$? No.\nCase $a=2$: $a-4 = 2-4 = -2$. Is $-2$ a divisor of $-2$? Yes.\n\nOnly $a=2$ satisfies both conditions. The problem also states $a \ne 7, a \ne 11$, which $a=2$ fulfills.\nTherefore, the unique integer value for $a$ is 2."
                }
            ]
        }
    };

    // --- PASTE ALL HELPER FUNCTIONS AND INIT LOGIC HERE ---
    // (Ensure formatTime, updateWelcomeMessage, renderSelectionScreen, renderProblems, etc. are included)
    const initApp = () => { console.log("Initializing App..."); try { Object.keys(allSolutions).forEach(setId => { if (!allSolutions[setId] || !allProblems[setId]) return; if (allSolutions[setId].th && allSolutions[setId].en) { allSolutions[setId].th.forEach((sol_th, i) => { const sol_en = allSolutions[setId].en[i]; const prob_th = allProblems[setId].th?.[i]; if (sol_en) { sol_th.answer = sol_en.answer; sol_th.hint = sol_en.hint; } if (prob_th) { sol_th.title = prob_th.title; } }); } if (allSolutions[setId].en && allProblems[setId].en) { allSolutions[setId].en.forEach((sol_en, i) => { const prob_en = allProblems[setId].en[i]; if (prob_en) { sol_en.title = prob_en.title; } }); } }); if (loginStuff.loginBtn) { loginStuff.loginBtn.addEventListener('click', loginAction); } else { console.error("Login button not found during init."); } if (submitBtn) { submitBtn.addEventListener('click', () => { if (confirm(currentLang === 'en' ? 'Are you sure you want to submit?' : 'คุณแน่ใจหรือไม่ว่าต้องการส่งคำตอบ?')) { submitTest(); } }); } else { console.error("Submit button not found during init."); } if (backToSelectionBtn) { backToSelectionBtn.addEventListener('click', () => { renderSelectionScreen(); showScreen('selection'); }); } else { console.error("Back button not found during init."); } logoutBtns.forEach((btn, index) => { if(btn) { btn.addEventListener('click', logoutAction); } else { console.warn(`Logout button at index ${index} not found during init.`); } }); langToggles.forEach((btn, index) => { if(btn) { btn.addEventListener('click', () => setLanguage(currentLang === 'en' ? 'th' : 'en')); } else { console.warn(`Lang toggle button at index ${index} not found during init.`); } }); let savedUser = null; try { savedUser = localStorage.getItem('loggedInUser'); } catch(e) { console.warn("localStorage unavailable:", e); } if (savedUser && credentials[savedUser]) { console.log(`Found logged in user: ${savedUser}`); currentUser = savedUser; showScreen('selection'); renderSelectionScreen(); } else { console.log("No logged in user found or invalid, showing login."); showScreen('login'); } setLanguage('en'); console.log("App Initialized Successfully."); } catch (error) { console.error("CRITICAL Error during app initialization:", error); const appDiv = getElem('app'); if(appDiv) appDiv.innerHTML = '<div style="color: red; text-align: center; padding: 40px; font-size: 1.2em;">Initialization Error! Please check the console (F12) for details and ensure all HTML elements exist.</div>'; if(screens.login) screens.login.classList.add('active'); else document.body.innerHTML = '<p style="color:red;">Fatal Error: Cannot load UI.</p>'; } };
    const showScreen = (screenId) => { console.log(`Attempting to show screen: ${screenId}`); try { const currentLoginCard = screens.login ? screens.login.querySelector('.card') : null; if(currentLoginCard) currentLoginCard.classList.remove('authenticating'); Object.values(screens).forEach(screen => { if (screen) screen.classList.remove('active'); }); const targetScreen = screens[screenId]; if (targetScreen) { targetScreen.classList.add('active'); console.log(`Screen ${screenId} activated.`); setTimeout(renderMath, 50); } else { console.error(`Screen "${screenId}" element not found.`); if(screenId !== 'login' && screens.login && !screens.login.classList.contains('active')) { console.warn("Falling back to login screen."); showScreen('login'); } } } catch (error) { console.error(`Error in showScreen('${screenId}'):`, error); } };
    const renderMath = () => { if (typeof renderMathInElement === 'function') { try { const mathContainers = document.querySelectorAll('.screen.active .problem-statement, .screen.active .solution-statement, .screen.active #score-display'); if (mathContainers.length > 0) { console.log("Rendering Math..."); mathContainers.forEach(container => { renderMathInElement(container, { delimiters: [ {left: '$$', right: '$$', display: true}, {left: '$', right: '$', display: false} ], throwOnError: false }); }); } } catch (error) { console.error("KaTeX rendering failed:", error); } } };
    const formatTime = (seconds) => { if (isNaN(seconds) || seconds < 0) return "00:00:00"; const h = Math.floor(seconds / 3600); const m = Math.floor((seconds % 3600) / 60); const s = Math.floor(seconds % 60); return `${h.toString().padStart(2, '0')}:${m.toString().padStart(2, '0')}:${s.toString().padStart(2, '0')}`; };
    const updateWelcomeMessage = () => { welcomeMessages.forEach(msg => { if(msg) { if (currentUser) { msg.textContent = currentLang === 'en' ? `Welcome, ${currentUser}` : `ยินดีต้อนรับ, ${currentUser}`; } else { msg.textContent = ''; } } }); };
    const renderSelectionScreen = () => { console.log("Rendering selection screen..."); try { if (!examListContainer) { console.error("Exam list container not found."); return; } examListContainer.innerHTML = ''; if (Object.keys(examSets).length === 0) { examListContainer.innerHTML = `<p>${currentLang === 'en' ? 'No exam sets available.' : 'ไม่มีชุดข้อสอบ'}</p>`; return; } Object.keys(examSets).forEach(setId => { const setInfo = examSets[setId]?.[currentLang]; if (!setInfo) { console.warn(`Missing language info for set "${setId}", lang "${currentLang}"`); return; } const setName = setInfo.name; const difficultyText = setInfo.difficulty ? (currentLang === 'en' ? `Difficulty: ${setInfo.difficulty}` : `ความยาก: ${setInfo.difficulty}`) : ''; const card = document.createElement('div'); card.className = 'exam-card'; const numQuestions = (allProblems[setId]?.[currentLang] || []).length; const detailsText = currentLang === 'en' ? `${numQuestions} Questions` : `${numQuestions} ข้อ`; card.innerHTML = ` <div> <h2>${setName}</h2> <p class="exam-details">${detailsText}${difficultyText ? ` - ${difficultyText}` : ''}</p> </div> <button class="start-btn" data-set-id="${setId}">${currentLang === 'en' ? 'Start' : 'เริ่มทำ'}</button> `; examListContainer.appendChild(card); }); examListContainer.querySelectorAll('.start-btn').forEach(button => { button.addEventListener('click', (e) => { currentSetId = e.target.getAttribute('data-set-id'); if (!currentSetId || !examSets[currentSetId]) { console.error("Invalid set ID clicked:", currentSetId); return; } const titleElement = getElem('test-title'); if (titleElement) { titleElement.textContent = examSets[currentSetId][currentLang].name; } else { console.error("Test title element not found."); } if (!timerDisplay) { console.error("Timer display element not found."); return; } showScreen('test'); renderProblems(); startTimer(); }); }); updateWelcomeMessage(); renderMath(); } catch (error) { console.error("Error in renderSelectionScreen:", error); } };
    const renderProblems = () => { console.log("Rendering problems for set:", currentSetId); try { if (!problemContainer) { console.error("Problem container not found."); return; } problemContainer.innerHTML = ''; if (!currentSetId || !allProblems[currentSetId]?.[currentLang]) { problemContainer.innerHTML = `<p>${currentLang === 'en' ? 'Error: Problems not available.' : 'ข้อผิดพลาด: ไม่พบชุดข้อสอบ'}</p>`; console.error("Problem data missing for set:", currentSetId, " lang:", currentLang); return; } allProblems[currentSetId][currentLang].forEach((p, index) => { const card = document.createElement('div'); card.className = 'problem-card'; const hintButtonText = currentLang === 'en' ? 'Hint' : 'คำใบ้'; card.innerHTML = ` <h2>${p.title || `Problem ${index + 1}`}</h2> <div class="problem-statement">${p.statement || ''}</div> <input type="text" class="answer-input" id="answer-${index}" placeholder="${currentLang === 'en' ? 'Your answer' : 'คำตอบของคุณ'}"> <button class="hint-btn" data-problem-index="${index}">${hintButtonText}</button> `; problemContainer.appendChild(card); }); problemContainer.querySelectorAll('.hint-btn').forEach(button => { button.addEventListener('click', handleHintClick); }); setTimeout(renderMath, 50); } catch(error) { console.error("Error in renderProblems:", error); } };
    const handleHintClick = (event) => { try { const button = event.target; const problemIndex = parseInt(button.getAttribute('data-problem-index'), 10); if (!isNaN(problemIndex)) { showHint(currentSetId, currentLang, problemIndex); } else { console.error("Invalid problem index on hint button:", button.getAttribute('data-problem-index')); } } catch (error) { console.error("Error handling hint click:", error); } };
    const showHint = (setId, lang, index) => { try { const hintText = allSolutions[setId]?.[lang]?.[index]?.hint; const alertTitle = lang === 'en' ? 'Hint' : 'คำใบ้'; if (hintText) { alert(`${alertTitle}:\n${hintText}`); } else { alert(lang === 'en' ? 'No hint available for this problem.' : 'ไม่มีคำใบ้สำหรับข้อนี้'); } } catch (error) { console.error("Error showing hint:", error); } };
    const startTimer = () => { console.log("Starting timer..."); try { if(timerInterval) clearInterval(timerInterval); let timeLeft = DURATION; if (!timerDisplay) { console.error("Timer display element not found. Cannot start timer."); return; } timerDisplay.textContent = formatTime(timeLeft); timerDisplay.classList.remove('warning', 'danger'); timerInterval = setInterval(() => { timeLeft--; if (timerDisplay) { timerDisplay.textContent = formatTime(timeLeft); timerDisplay.classList.toggle('warning', timeLeft < 600 && timeLeft >= 60); timerDisplay.classList.toggle('danger', timeLeft < 60); } if (timeLeft <= 0) { console.log("Time's up!"); clearInterval(timerInterval); alert(currentLang === 'en' ? "Time's up! Submitting automatically." : "หมดเวลา! กำลังส่งคำตอบอัตโนมัติ"); submitTest(); } }, 1000); } catch(error) { console.error("Error starting timer:", error); } };
    const submitTest = () => { console.log("Submitting test..."); try { if(!currentSetId || !allSolutions[currentSetId]?.en) { console.error("Cannot submit: currentSetId or solutions missing."); alert(currentLang === 'en' ? "Error submitting test. Data missing." : "เกิดข้อผิดพลาดในการส่ง ไม่พบข้อมูล"); return; } if(timerInterval) clearInterval(timerInterval); if (currentUser && currentUser !== 'JJ') { try { localStorage.setItem(`test_completed_${currentUser}_${currentSetId}`, 'true'); } catch (e) { console.warn("Could not save completion status to localStorage:", e); } } let score = 0; const solutionsForSet = allSolutions[currentSetId].en; solutionsForSet.forEach((sol, i) => { const userInputEl = getElem(`answer-${i}`); if(userInputEl && sol.answer !== undefined && userInputEl.value.trim() === sol.answer) { score++; } else if (!userInputEl) { console.warn(`Answer input for index ${i} not found.`); } }); lastScore = score; displayScore(score); renderSolutions(); showScreen('solution'); } catch (error) { console.error("Error submitting test:", error); alert(currentLang === 'en' ? "An error occurred during submission." : "เกิดข้อผิดพลาดระหว่างการส่งคำตอบ"); } };
    const displayScore = (score) => { try { const problemsForSet = allProblems[currentSetId]?.[currentLang]; const total = problemsForSet ? problemsForSet.length : 0; const scoreText = currentLang === 'en' ? `Your Score: ${score} / ${total}` : `คะแนนของคุณ: ${score} / ${total}`; if (scoreDisplay) { scoreDisplay.textContent = scoreText; } else { console.error("Score display element not found."); } } catch (error) { console.error("Error displaying score:", error); } };
    const renderSolutions = () => { console.log("Rendering solutions..."); try { if (!solutionList) { console.error("Solution list container not found."); return; } solutionList.innerHTML = ''; if (currentSetId && allSolutions[currentSetId]?.[currentLang] && allProblems[currentSetId]?.[currentLang]) { const solutions = allSolutions[currentSetId][currentLang]; const problems = allProblems[currentSetId][currentLang]; solutions.forEach((s, index) => { const card = document.createElement('div'); card.className = 'solution-card'; const formattedSteps = (s.steps || '') .replace(/\n\n/g, '<br><br>') .replace(/\n/g, '<br>'); const problemTitle = problems[index]?.title || `Problem ${index + 1}`; const problemStatement = problems[index]?.statement || ''; const answerText = s.answer !== undefined ? s.answer : 'N/A'; card.innerHTML = ` <h2>${problemTitle}</h2> <div class="problem-statement">${problemStatement}</div> <hr> <p><strong>${currentLang === 'en' ? 'Answer' : 'คำตอบ'}: ${answerText}</strong></p> <div class="solution-statement">${formattedSteps || (currentLang === 'en' ? 'No steps available.' : 'ไม่มีขั้นตอนวิธีทำ')}</div>`; solutionList.appendChild(card); }); } else { solutionList.innerHTML = `<p>${currentLang === 'en' ? 'Solutions are currently unavailable.' : 'ไม่สามารถแสดงเฉลยได้ในขณะนี้'}</p>`; console.error("Could not render solutions: Data missing for set", currentSetId, " lang", currentLang); } updateWelcomeMessage(); setTimeout(renderMath, 50); } catch (error) { console.error("Error rendering solutions:", error); } };
    const setLanguage = (lang) => { console.log("Setting language to:", lang); if (lang !== 'en' && lang !== 'th') { console.warn("Unsupported language:", lang); return; } currentLang = lang; try { const loginTitle = getElem('login-title'); if(loginTitle) loginTitle.textContent = lang === 'en' ? 'Mathematics Exam' : 'แบบทดสอบคณิตศาสตร์'; if(loginStuff.usernameInput) loginStuff.usernameInput.placeholder = lang === 'en' ? 'Username' : 'ชื่อผู้ใช้'; if(loginStuff.passwordInput) loginStuff.passwordInput.placeholder = lang === 'en' ? 'Password' : 'รหัสผ่าน'; if(loginStuff.loginBtn) loginStuff.loginBtn.textContent = lang === 'en' ? 'Login' : 'เข้าสู่ระบบ'; const selTitle = getElem('selection-title'); if(selTitle) selTitle.textContent = lang === 'en' ? 'Select Exam' : 'เลือกชุดข้อสอบ'; const timerLabel = getElem('timer-label'); if(timerLabel) timerLabel.textContent = lang === 'en' ? 'Time Left:' : 'เวลาที่เหลือ:'; if(submitBtn) submitBtn.textContent = lang === 'en' ? 'Submit' : 'ส่งคำตอบ'; const solTitle = getElem('solution-title'); if(solTitle) solTitle.textContent = lang === 'en' ? 'Results & Solutions' : 'ผลลัพธ์และเฉลย'; if(backToSelectionBtn) backToSelectionBtn.textContent = lang === 'en' ? 'Select Another Exam' : 'เลือกข้อสอบอื่น'; const loadingText = getElem('loading-text'); if(loadingText) loadingText.textContent = lang === 'en' ? 'Verifying...' : 'กำลังตรวจสอบ...'; logoutBtns.forEach(btn => { if(btn) btn.textContent = lang === 'en' ? 'Logout' : 'ออกจากระบบ'; }); updateWelcomeMessage(); if (screens.selection && screens.selection.classList.contains('active')) { renderSelectionScreen(); } else if (screens.test && screens.test.classList.contains('active')) { const titleElement = getElem('test-title'); if (titleElement && currentSetId && examSets[currentSetId]) { titleElement.textContent = examSets[currentSetId][currentLang].name; } renderProblems(); } else if (screens.solution && screens.solution.classList.contains('active')) { if (lastScore !== null) displayScore(lastScore); renderSolutions(); } } catch (error) { console.error("Error setting language:", error); } };
    const loginAction = () => { try { const currentLoginCard = screens.login ? screens.login.querySelector('.card') : null; if (currentLoginCard) currentLoginCard.classList.add('authenticating'); if (loginStuff.errorMsg) loginStuff.errorMsg.textContent = ''; console.log("Login attempt..."); setTimeout(() => { const username = loginStuff.usernameInput ? loginStuff.usernameInput.value.trim() : ''; const password = loginStuff.passwordInput ? loginStuff.passwordInput.value.trim() : ''; if (credentials[username] && credentials[username] === password) { console.log("Login successful for:", username); currentUser = username; try { localStorage.setItem('loggedInUser', username); } catch (e) { console.warn("localStorage unavailable:", e); } showScreen('selection'); renderSelectionScreen(); } else { console.log("Login failed."); if(loginStuff.errorMsg) loginStuff.errorMsg.textContent = currentLang === 'en' ? 'Invalid username or password. Note: It is case-sensitive.' : 'ชื่อผู้ใช้หรือรหัสผ่านไม่ถูกต้อง (โปรดระวังตัวพิมพ์เล็ก-ใหญ่)'; if (currentLoginCard) currentLoginCard.classList.remove('authenticating'); } }, 50); } catch(error) { console.error("Error during login:", error); if(loginStuff.errorMsg) loginStuff.errorMsg.textContent = currentLang === 'en' ? 'Login error occurred.' : 'เกิดข้อผิดพลาดในการเข้าสู่ระบบ'; const currentLoginCard = screens.login ? screens.login.querySelector('.card') : null; if (currentLoginCard) currentLoginCard.classList.remove('authenticating'); } };
    const logoutAction = () => { console.log("Logout action"); try { currentUser = null; lastScore = null; currentSetId = null; try { localStorage.removeItem('loggedInUser'); } catch (e) { console.warn("localStorage unavailable:", e); } if(loginStuff.usernameInput) loginStuff.usernameInput.value = ''; if(loginStuff.passwordInput) loginStuff.passwordInput.value = ''; if(timerInterval) clearInterval(timerInterval); showScreen('login'); } catch(error) { console.error("Error during logout:", error); } };

    // --- Initialize App ---
    const initApp = () => { console.log("Initializing App..."); try { Object.keys(allSolutions).forEach(setId => { if (!allSolutions[setId] || !allProblems[setId]) return; if (allSolutions[setId].th && allSolutions[setId].en) { allSolutions[setId].th.forEach((sol_th, i) => { const sol_en = allSolutions[setId].en[i]; const prob_th = allProblems[setId].th?.[i]; if (sol_en) { sol_th.answer = sol_en.answer; sol_th.hint = sol_en.hint; } if (prob_th) { sol_th.title = prob_th.title; } }); } if (allSolutions[setId].en && allProblems[setId].en) { allSolutions[setId].en.forEach((sol_en, i) => { const prob_en = allProblems[setId].en[i]; if (prob_en) { sol_en.title = prob_en.title; } }); } }); if (loginStuff.loginBtn) { loginStuff.loginBtn.addEventListener('click', loginAction); } else { console.error("Login button not found during init."); } if (submitBtn) { submitBtn.addEventListener('click', () => { if (confirm(currentLang === 'en' ? 'Are you sure you want to submit?' : 'คุณแน่ใจหรือไม่ว่าต้องการส่งคำตอบ?')) { submitTest(); } }); } else { console.error("Submit button not found during init."); } if (backToSelectionBtn) { backToSelectionBtn.addEventListener('click', () => { renderSelectionScreen(); showScreen('selection'); }); } else { console.error("Back button not found during init."); } logoutBtns.forEach((btn, index) => { if(btn) { btn.addEventListener('click', logoutAction); } else { console.warn(`Logout button at index ${index} not found during init.`); } }); langToggles.forEach((btn, index) => { if(btn) { btn.addEventListener('click', () => setLanguage(currentLang === 'en' ? 'th' : 'en')); } else { console.warn(`Lang toggle button at index ${index} not found during init.`); } }); let savedUser = null; try { savedUser = localStorage.getItem('loggedInUser'); } catch(e) { console.warn("localStorage unavailable:", e); } if (savedUser && credentials[savedUser]) { console.log(`Found logged in user: ${savedUser}`); currentUser = savedUser; showScreen('selection'); renderSelectionScreen(); } else { console.log("No logged in user found or invalid, showing login."); showScreen('login'); } setLanguage('en'); console.log("App Initialized Successfully."); } catch (error) { console.error("CRITICAL Error during app initialization:", error); const appDiv = getElem('app'); if(appDiv) appDiv.innerHTML = '<div style="color: red; text-align: center; padding: 40px; font-size: 1.2em;">Initialization Error! Please check the console (F12) for details and ensure all HTML elements exist.</div>'; if(screens.login) screens.login.classList.add('active'); else document.body.innerHTML = '<p style="color:red;">Fatal Error: Cannot load UI.</p>'; } };

    // --- Start App ---
    try { initApp(); }
    catch(err) { console.error("FATAL ERROR ON INITIAL SCRIPT EXECUTION:", err); const appDiv = getElem('app'); if(appDiv) appDiv.innerHTML = '<div style="color: red; text-align: center; padding: 40px; font-size: 1.2em;">Fatal Error Loading Script. Check Console (F12).</div>'; else document.body.innerHTML = '<p style="color:red;">Fatal Error: Cannot load UI.</p>'; }

}); // End DOMContentLoaded
